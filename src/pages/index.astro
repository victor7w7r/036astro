---
import Layout from '@/common/layouts/Layout.astro';

import { CookieState } from '@/common/components/cookie-state/cookie-state';
import StorageState from '@/common/components/storage-state/StorageState.svelte';
import Call from '@/home/components/Call.svelte';
import Spinner from '@/home/components/Spinner.astro';

import '@/home/styles/home.css';
---

<Layout title='Home Page'>
  <div class='page-container'>
    <div class='home-container'>
      <div class='card-flex'>
        <div id='card-container' class='card-container'>
          <p class='adaptable-amina'>Made with love by</p>
          <img-reactive
            style='scale-75 lg:scale-80'
            white='brandwhite'
            black='brand'
          >
          </img-reactive>
          <h3 class='adaptable-center-text-base mb-4 font-semibold'>
            Happy Hacking! with Typescript?
          </h3>
          <p class='adaptable-center-text-base mb-8 font-roboto'>
            Roboto Font works with
          </p>
          <img-reactive
            style='scale-50 tall:scale-65 lg:scale-65'
            white='tailwindwhite'
            black='tailwind'
          >
          </img-reactive>
          <img alt='' id='imagetwo' class='' />
        </div>
        <div id='card-container' class='card-container'>
          <CookieState />
          <StorageState client:load />
          <h3 class='adaptable-center-text-bold'>Lets see bitcoin price</h3>
          <Call client:load><Spinner /></Call>
        </div>
      </div>
      <div class='centered-button-ctn'>
        <a class='standard-button' href='/store' rel='prefetch'> Go to store</a>
      </div>
      <div id='buttons-selector' class='mx-auto mt-3 flex w-fit flex-row gap-7'>
      </div>
    </div>
  </div>
</Layout>

<script src='@/common/scripts'></script>

<script>
  import { html } from 'sinuous';
  import { define } from 'uce';

  import {
    changeBlue,
    changePurple,
    changeRed,
    changeEmerald,
    theme
  } from '@/common/stores';

  type ImgReactiveProps = {
    style: string;
    white: string;
    black: string;
  };

  const path = (isDark: boolean, white: string, black: string) =>
    `/img/${isDark ? white : black}.png`;

  define<ImgReactiveProps, { isDark: boolean }>('img-reactive', {
    init() {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      theme.subscribe(_ => this.render());
    },
    render() {
      this.isDark = theme.get().isDark;
      this.html`<img
        alt=''
        class='${this.props.style}'
        src='${path(this.isDark, this.props.white, this.props.black)}'
      />`;
    }
  });

  document.querySelector('#buttons-selector')?.append(html`
    <button class="blue-button" onclick=${changeBlue}></button>
    <button class="purple-button" onclick=${changePurple}></button>
    <button class="red-button" onclick=${changeRed}></button>
    <button class="emerald-button" onclick=${changeEmerald}></button>
  `);
</script>
